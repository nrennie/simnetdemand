#' This function determines the rate of a non-homogeneous Poisson process.
#'
#' @param A Mean total demand across all customer types. Default 200.
#' @param a Beta distribution parameter 1. Default 1.
#' @param b Beta distribution parameter 2. Default 1.
#' @param phi Percentage of total demand for this customer type. Default 1.
#' @param t Current time point. Default 1.
#' @param N Total number of time points that will be generated. Default 3000.
#' @return A numeric value.
#' @export
nhpprate <- function(A = 240,
a = 1,
b = 1,
phi = 1,
t = 1,
N = 3000) {
l <- A*phi*dbeta(t / N, a, b)
return(l)
}
nhpprate()
nhpprate(t = 30)
30/3000
lintr::lint_package()
lintr::lint_package()
devtools::document()
nhpp <- function(alpha = 200,
beta = 1,
phi1 = 0.5,
a1 = 1,
b1 = 1,
a2 = 1,
b2 = 1,
n = 3000,
hor_length = 30){
A <- stats::rgamma(1, shape = alpha, rate = beta) / hor_length
phi2 <- 1 - phi1
Cust1 <- numeric(length = n)
Cust2 <- numeric(length = n)
for (t in 1:n){
l1 <- nhpprate(A, a1, b1, phi1, t, n) * (hor_length / n)
Cust1[t] <- rpois(1, l1)
l2 <- nhpprate(A, a2, b2, phi2, t, n) * (hor_length / n)
Cust2[t] <- stats::rpois(1, l2)
}
return(list(Cust1 = Cust1, Cust2 = Cust2))
}
nhpp()
#' This function determines the rate of a non-homogeneous Poisson process.
#'
#' @param A Mean total demand across all customer types. Default 200.
#' @param a Beta distribution parameter 1. Default 1.
#' @param b Beta distribution parameter 2. Default 1.
#' @param phi Percentage of total demand for this customer type. Default 1.
#' @param t Current time point. Default 1.
#' @param n Total number of time points that will be generated. Default 3000.
#' @return A numeric value.
#' @export
nhpprate <- function(A = 240, #nolint
a = 1,
b = 1,
phi = 1,
t = 1,
n = 3000) {
l <- A * phi * stats::dbeta(t / n, a, b)
return(l)
}
nhpp()
devtools::document()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
devtools::document()
devtools::document()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
lintr::lint_package()
lintr::lint_package()
